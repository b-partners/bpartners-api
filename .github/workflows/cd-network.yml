name: CD Network

on:
  workflow_dispatch:
    inputs:
      VPCName:
        type: string
        default: bpartners
        required: false
        description: The name to be given to the VPC
      IPv4CIDR:
        type: string
        default: 172.31.0.0/16
        description: The IPv4 CIDR to assign to the VPC
        required: false
      PublicSubnetAZ:
        type: string
        default: eu-west-3a
        description: The availability zone for the public subnet
        required: false
      PrivateSubnet1AZ:
        type: string
        default: eu-west-3b
        description: The availability zone Id for the first private subnet
        required: false
      PrivateSubnet1IPv4CIDR:
        type: string
        default: 172.31.16.0/16
        description: The IPv4 CIDR to assign to the first private subnet
        required: false
      PrivateSubnet2AZ:
        type: string
        default: eu-west-3c
        description: The availability zone Id for the second private subnet
        required: false
      PrivateSubnet2IPv4CIDR:
        type: string
        default: 172.31.32.0/16
        description: The IPv4 CIDR to assign to the second private subnet
        required: false
      ALBName:
        type: string
        default: bpartners-internal-alb
        description: The name to be given to the Application Load Balancer
        required: false

jobs:
  cd-network:
    if: github.ref_name == 'prod' || github.ref_name == 'preprod'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      AWS_REGION: eu-west-3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Put branch_env into GITHUB_ENV
        run: |
          echo "branch_env=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy event stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: network-bpartners
          template: cf-stacks/network-stack.yml
          tags: "[ { \"Key\": \"app\", \"Value\": \"bpartners\" }, { \"Key\": \"env\", \"Value\": \"all\" } ]"
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: "1"
          parameter-overrides:
            "Env=${{ env.branch_env }}, VPCName=${{ github.event.inputs.VPCName }}, IPv4CIDR=${{ github.event.inputs.IPv4CIDR }},
            PublicSubnetAZ=${{ github.event.inputs.PublicSubnetAZ }},PrivateSubnet1AZ=${{ github.event.inputs.PrivateSubnet1AZ }},
            PrivateSubnet1IPv4CIDR=${{ github.event.inputs.PrivateSubnet1IPv4CIDR }}, PrivateSubnet2AZ=${{ github.event.inputs.PrivateSubnet2AZ }},
            PrivateSubnet2IPv4CIDR=${{ github.event.inputs.PrivateSubnet2IPv4CIDR }}, ALBName=$${{ github.event.inputs.ALBName }}"