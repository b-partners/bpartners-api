name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  quality:

    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # no shallow clone for better relevancy of Sonar analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-maven-${{ hashFiles('**/build.gradle', '**/api.yml') }}
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Jacoco test coverage
        run: |
          export TEST_USER_ACCESS_TOKEN=${{ secrets.TEST_USER_ACCESS_TOKEN }}
          export SWAN_CLIENT_ID=${{ secrets.SWAN_CLIENT_ID }}
          export SWAN_CLIENT_SECRET=${{ secrets.SWAN_CLIENT_SECRET }}
          export TEST_SWAN_USER_CODE=${{ secrets.TEST_SWAN_USER_CODE }}
          export AWS_SSM_SWAN_PROJECT_PARAM=${{ secrets.AWS_SSM_SWAN_PROJECT_PARAM }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export FINTECTURE_APP_ID=${{ secrets.FINTECTURE_APP_ID }}
          export FINTECTURE_APP_SECRET=${{ secrets.FINTECTURE_APP_SECRET }}
          ./gradlew test

      - name: Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube --info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=bpartners \
            -Dsonar.projectKey=bpartners-api \
            -Dsonar.coverage.exclusions=**/gen/** \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml \
            -Dsonar.java.checkstyle.reportPaths=build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml
