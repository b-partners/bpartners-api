AWSTemplateFormatVersion: 2010-09-09
Description: Compute stack for BPartners

Parameters:
  Env:
    Type: String
  Image:
    Type: String
  ContainerName:
    Type: String
    Default: compute-bpartners
  ContainerPort:
    Type: Number
    Default: 8080
  TasksDesiredCount:
    Type: Number
  ListenerRuleAvailablePriority:
    Type: Number
  Memory:
    Type: String
  Cpu:
    Type: String

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Join ['', [!Ref Env, -compute-bpartners]]
  LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: LogGroup
    Properties:
      Family: !Join ['', [!Ref Env, -compute-bpartners]]
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref Cpu
      Memory: !Ref Memory
      ExecutionRoleArn: !Ref ExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Ref Image
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Environment:
            - Name: ENV
              Value: !Ref Env
            - Name: SENTRY_DSN
              Value: !Sub '{{resolve:ssm:/bpartners/sentry/dsn}}'
            - Name: AWS_COGNITO_USERPOOL_ID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/cognito/userpool-id}}'
            - Name: AWS_EVENTBRIDGE_BUS
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/eventbridge/bus-name}}'
            - Name: AWS_SQS_MAILBOXURL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sqs/mailbox-queue-url}}'
            - Name: SPRING_DATASOURCE_URL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/db/url}}'
            - Name: SPRING_DATASOURCE_USERNAME
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/db/username}}'
            - Name: SPRING_DATASOURCE_PASSWORD
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/db/password}}'
            - Name: SWAN_CLIENT_ID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/swan/client-id}}'
            - Name: SWAN_CLIENT_SECRET
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/swan/client-secret}}'
            - Name: SWAN_BASE_URL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/swan/base-url}}'
            - Name: FINTECTURE_APP_ID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/fintecture/app-id}}'
            - Name: FINTECTURE_APP_SECRET
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/fintecture/app-secret}}'
            - Name: FINTECTURE_BASE_URL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/fintecture/base-url}}'
            - Name: AWS_BUCKET_NAME
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/s3/bucket-name}}'
            - Name: SENDINBLUE_API_KEY
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sendinblue/api-key}}'
            - Name: SENDINBLUE_CONTACTLIST_ID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sendinblue/contactlist-id}}'
            - Name: ADS_BASEURL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sogefi/ads-base-url}}'
            - Name: ADS_BEARER
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sogefi/ads-bearer}}'
            - Name: ADS_DENOM_CHAR
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sogefi/ads-denom-char}}'
            - Name: ADS_LIMIT
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/sogefi/ads-limit}}'
            - Name: BRIDGE_CLIENT_ID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/bridge/client-id}}'
            - Name: BRIDGE_CLIENT_SECRET
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/bridge/client-secret}}'
            - Name: BRIDGE_BASE_URL
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/bridge/base-url}}'
            - Name: BRIDGE_VERSION
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/bridge/version}}'
            - Name: AWS_COGNITO_USERPOOL_DOMAIN
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/cognito/userpool-domain}}'
            - Name: AWS_COGNITO_USERPOOL_CLIENTID
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/cognito/userpool-client-id}}'
            - Name: AWS_COGNITO_USERPOOL_CLIENTSECRET
              Value: !Sub '{{resolve:ssm:/bpartners/${Env}/cognito/userpool-client-secret}}'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref Env, -compute-bpartners, -ExecutionRole]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref Env, -compute-bpartners, -TaskRole]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSQSFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSSMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonCognitoPowerUser'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      ServiceName: compute-bpartners
      DesiredCount: !Ref TasksDesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: 'FARGATE'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: 'DISABLED'
          SecurityGroups:
            - !Sub '{{resolve:ssm:/bpartners/${Env}/sg-id}}'
          Subnets:
            - !Sub '{{resolve:ssm:/bpartners/${Env}/subnet-id}}'
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['', [!Ref Env, -compute-bpartners, -tg]]
      Protocol: HTTP
      Port: !Ref ContainerPort
      # TargetType must be ip with Fargate: targets are (de-)registered on container creation/destruction
      TargetType: ip
      #Targets: 
      #  - AvailabilityZone: all
      #    Id: 
      #    Port: ! Ref ContainerPort
      VpcId: !Sub '{{resolve:ssm:/bpartners/${Env}/vpc-id}}'
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /ping
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 2
      # Spring boot takes up to 120s to start: define UnhealthyThresholdCount*HealthCheckIntervalSecond accordingly
      UnhealthyThresholdCount: 6
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Sub '{{resolve:ssm:/bpartners/${Env}/alb-https-listener-arn}}'
      Priority: !Ref ListenerRuleAvailablePriority
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !Join ['', [api-, !Ref Env, .bpartners.app]]
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
