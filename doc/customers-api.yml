operations:
  getOrCreateCustomers:
    get:
      tags:
        - Customers
      summary: Get customers of an account
      operationId: getCustomers
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: firstName
          schema:
            type: string
        - in: query
          name: lastName
          schema:
            type: string
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
      responses:
        200:
          description: List of customers of the specified account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    post:
      tags:
        - Customers
      summary: Create customers for an account
      operationId: createCustomers
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCustomer'
      responses:
        200:
          description: List of customers of the specified account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    put:
      tags:
        - Customers
      summary: Update customers for an account
      operationId: updateCustomers
      parameters:
        - in: path
          name: id
          description: Account identifier
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: List of updated customers of the specified account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  importCustomers:
    post:
      tags:
        - Customers
      summary: Import customers for an account
      operationId: importCustomers
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/xls:
            schema:
              type: string
              format: binary
          application/xlsx:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: List of imported customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
components:
  schemas:
    CreateCustomer:
      type: object
      properties:
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        website:
          type: string
        address:
          type: string
        zipCode:
          type: integer
        city:
          type: string
        country:
          type: string
        comment:
          type: string
    Customer:
      type: object
      properties:
        id:
          type: string
      allOf:
        - $ref: '#/components/schemas/CreateCustomer'