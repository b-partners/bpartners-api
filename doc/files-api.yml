operations:
  getFileById:
    get:
      tags:
        - Files
      summary: Get information of a file
      operationId: getFileById
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        200:
          description: Information of the file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  downloadOrUploadFile:
    get:
      tags:
        - Files
      summary: Download a file
      operationId: downloadFile
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: accessToken
          schema:
            type: string
        - in: query
          name: fileType
          schema:
            $ref: '#/components/schemas/FileType'
      responses:
        200:
          description: The file
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    post:
      tags:
        - Files
      summary: Upload a file. Fails if file already exists.
      operationId: uploadFile
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: fileType
          schema:
            type: string
      requestBody:
        required: true
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary
          application/pdf:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: The crupdated file
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getAllAreaPictures:
    get:
      tags:
        - Files
        - AreaPicture
      summary: |
        list all existing area pictures linked to this account
      operationId: getAllAreaPictures
      parameters:
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: query
          name: address
          schema:
            type: string
        - in: query
          name: filename
          schema:
            type: string
      responses:
        200:
          description: area pictures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AreaPictureDetails"
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getAreaPictureById:
    get:
      tags:
        - Files
        - AreaPicture
      summary: get specified area picture
      operationId: getAreaPictureById
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        200:
          description: The Area Picture Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AreaPictureDetails"
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  areaPictureUpload:
    put:
      tags:
        - Files
        - AreaPicture
      summary: |
        Download a file from external image source if it doesn't exist yet, and saves it in S3.
        Otherwise, download from S3
      operationId: downloadAndSaveAreaPicture
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: accessToken
          schema:
            type: string
      requestBody:
        required: true
        description:
          |
          an address readable by BAN API 
          to convert into geographical coordinates in order to get a specific area
          as a picture
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrupdateAreaPictureDetails"
      responses:
        200:
          description: The file
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
components:
  schemas:
    CrupdateAreaPictureDetails:
      type: object
      properties:
        address:
          type: string
        zoomLevel:
          $ref: "#/components/schemas/ZoomLevel"
        layer:
          $ref: "#/components/schemas/OpenStreetMapLayer"
        fileId:
          type: string
        filename:
          type: string
        prospectId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AreaPictureDetails:
      allOf:
        - $ref: "#/components/schemas/CrupdateAreaPictureDetails"
      properties:
        id:
          type: string
        xTile:
          type: integer
        yTile:
          type: integer
    FileInfo:
      type: object
      properties:
        id:
          type: string
        uploadedAt:
          type: string
          format: date-time
        uploadedByAccountId:
          type: string
          example: "uuid"
        sizeInKB:
          type: integer
        sha256:
          type: string
    FileType:
      type: string
      enum:
        - TRANSACTION
        - INVOICE
        - LOGO
        - ATTACHMENT
        - IMAGE
        - AREA_PICTURE
        - TRANSACTION_SUPPORTING_DOCS
    ZoomLevel:
      type: string
      enum:
        - WORLD_0
        - WORLD_1
        - WORLD_2
        - CONTINENT_0
        - CONTINENT_1
        - COUNTRIES
        - COUNTRY
        - STATES
        - COUNTIES_0
        - COUNTIES_1
        - COUNTY
        - METROPOLITAN_AREA
        - CITIES
        - CITY
        - TOWN
        - NEIGHBORHOOD
        - STREETS
        - CITY_BLOCK
        - BUILDINGS
        - BUILDING
        - HOUSES_0
        - HOUSES_1
        - HOUSES_2
        - HOUSE_PROPERTY
    OpenStreetMapLayer:
      type: string
      enum:
        - 94NE
        - 94NO
        - 94SE
        - 94SO
        - PNRVercors-RHP-1999
        - alpesmaritimes06_2009
        - angouleme_2019
        - bayonne_2016
        - bayonne_2019
        - bdhisto
        - bdparcellaire
        - bdparcellaire_histo
        - bordeaux_2012
        - bordeaux_2016
        - bordeaux_2020
        - brest_2004
        - brest_2012
        - brest_2015
        - brocas_2013
        - cannes_2020
        - cg93_2013
        - craig_2013
        - craig_2019
        - enedis
        - fr_d44_2016
        - fr_d92_1978
        - fr_d92_2002
        - fr_d92_2005
        - fr_d92_2009
        - fr_d92_2009ir
        - fr_d92_2010
        - fr_d92_2013
        - fr_d92_2015
        - fr_d92_2018
        - fr_d93_2018
        - fr_d94_2018
        - haguenau_2019
        - larochelle_2007
        - larochelle_2013
        - lehavre_1947
        - lehavre_2014
        - lille_2020
        - lyon
        - lyon_2015
        - lyon_2018
        - lyon_2020
        - montauban_2020
        - mulhouse_2018
        - nancy
        - nancy_1994
        - nancy_1999
        - nancy_2001
        - nancy_2002
        - nancy_2005
        - nancy_2008
        - nancy_2012
        - nancy_2016
        - nancy_2019
        - nasa_black_marble
        - nasa_blue_marble
        - nouvelle_caledonie
        - orthohr
        - orthohr_2013
        - orthohr_2014
        - orthohr_2015
        - orthohr_2016
        - orthohr_2017
        - orthohr_2017_antilles
        - orthohr_2018
        - orthohr_2018_antilles
        - orthohr_2019
        - orthohr_2020
        - orthohr_2021
        - ortholittorale
        - ortholittorale_2002
        - ortholittorale_2021
        - paca
        - paca04_2010
        - paca05_2010
        - paca06_2009
        - paca13_2009
        - paca84_2010
        - ppige_2013
        - rennes_2014
        - rennes_2018
        - rennes_2020
        - toulouse
        - toulouse_2013
        - toulouse_2015
        - toulouse_2017
        - toulouse_2019
        - toulouse_ortho2007
        - toulouse_ortho2011
        - tours
        - tours_2013
        - tous_fr
        - tous_proxy_fr
        - tout_2015
        - vers_2011