operations:
  getTransactions:
    get:
      tags:
        - Paying
      summary: Get transactions of an account
      operationId: getTransactions
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
      responses:
        200:
          description: List of transactions of the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getTransactionCategories:
    get:
      tags:
        - Paying
      summary: Get known transaction categories of an account
      operationId: getTransactionCategories
      description: |
        Can be filter by :
        * unique : show distinct transaction categories
        * date intervals : give the count of transaction categories used by existing transactions 
        between two dates
        * transactionType : INCOME or OUTCOME or null if both
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: query
          name: transactionType
          schema:
            $ref: '#/components/schemas/TransactionTypeEnum'
        - in: query
          name: from
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: to
          schema:
            type: string
            format: date
          required: true
      responses:
        200:
          description: List of known transaction categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionCategory'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  createTransactionCategories:
    post:
      tags:
        - Paying
      summary: Create transaction categories
      operationId: createTransactionCategories
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: tId
          description: Transaction identifier
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateTransactionCategory'
      responses:
        200:
          description: List of created transaction categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionCategory'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getTransactionsSummary:
    get:
      tags:
        - Paying
      operationId: getTransactionsSummary
      summary: Get the transactions summary of an account
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: query
          name: year
          schema:
            type: integer
          description: Default value is current year
      responses:
        200:
          description: The transactions summary of the chosen year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsSummary'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  accountRelaunchOperations:
    get:
      tags:
        - Paying
      summary: Get the current relaunch configuration for invoice
      operationId: getAccountInvoiceRelaunchConf
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
      responses:
        200:
          description: The account invoice relaunching configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInvoiceRelaunchConf'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    put:
      tags:
        - Paying
      summary: Configure the automatic relaunch of all invoices of an account
      operationId: configureAccountInvoiceRelaunch
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountInvoiceRelaunchConf'
      responses:
        200:
          description: The account invoice relaunch configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInvoiceRelaunchConf'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  invoiceRelaunchConfOperations:
    get:
      tags:
        - Paying
      summary: Get the current relaunch configuration for a specific invoice
      operationId: getInvoiceRelaunchConf
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
      responses:
        200:
          description: The specified invoice's relaunching configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRelaunchConf'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    put:
      tags:
        - Paying
      summary: Configure the automatic relaunch a specific invoice.
      operationId: configureInvoiceRelaunch
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceRelaunchConf'
      responses:
        200:
          description: The specified invoice's relaunch configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRelaunchConf'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getOrCreateProducts:
    get:
      tags:
        - Paying
      summary: Get known products of the specified account
      operationId: getProducts
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: unique
          description: If description is null, this parameter is required.
          schema:
            type: boolean
        - in: query
          name: description
          schema:
            type: string
          description: Filter product by description
      responses:
        200:
          description: List of known products of the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    post:
      tags:
        - Paying
      operationId: createProducts
      summary: Create products of an account
      parameters:
        - in: path
          name: id
          description: Account identifier
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateProduct'
      responses:
        200:
          description: The created products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getInvoices:
    get:
      tags:
        - Paying
      operationId: getInvoices
      summary: Get known invoices of the specified account
      description: Returned invoices are ordered by created datetime desc.
      parameters:
        - in: path
          name: aId
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
        - in: query
          name: status
          description: 'Filter invoices by appropriate status. If null, returns all invoices'
          schema:
            $ref: '#/components/schemas/InvoiceStatus'
      responses:
        200:
          description: The list of invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  invoiceOperations:
    put:
      tags:
        - Paying
      summary: Crupdate an invoice
      operationId: crupdateInvoice
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateInvoice'
      responses:
        200:
          description: The crupdated invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    get:
      tags:
        - Paying
      summary: Get an invoice
      operationId: getInvoiceById
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
      responses:
        200:
          description: The invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getRelaunches:
    get:
      tags:
        - Paying
      summary: Get relaunches of a specified invoice
      operationId: getRelaunches
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
        - in: query
          name: type
          description: Filter relaunches by type
          schema:
            type: string
      responses:
        200:
          description: List of relaunches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceRelaunch'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  relaunchInvoice:
    post:
      tags:
        - Paying
      summary: Relaunch an invoice
      operationId: relaunchInvoice
      parameters:
        - in: path
          name: aId
          description: Account identifier
          schema:
            type: string
          required: true
        - in: path
          name: iId
          description: Invoice identifier
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRelaunch'
      responses:
        200:
          description: The invoice relaunch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRelaunch'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  initiatePayments:
    post:
      tags:
        - Paying
      summary: Initiate payment processes to an account
      operationId: initiatePayments
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PaymentInitiation'
      responses:
        200:
          description: List of redirections where to initiate payments to the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentRedirection'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          example: 'uuid'
        amount:
          type: integer
        label:
          type: string
        reference:
          type: string
        paymentDatetime:
          type: string
          format: date-time
        category:
          type: array
          items:
            $ref: '#/components/schemas/TransactionCategory'
        type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        status:
          $ref: '#/components/schemas/TransactionStatus'
    TransactionTypeEnum:
      type: string
      enum:
        - INCOME
        - OUTCOME
    TransactionCategory:
      allOf:
        - $ref: '#/components/schemas/CreateTransactionCategory'
      properties:
        id:
          type: string
        count:
          type: integer
          format: int64
        transactionType:
          $ref: '#/components/schemas/TransactionTypeEnum'
        description:
          type: string
          example: null
        isOther:
          type: boolean
    CreateTransactionCategory:
      type: object
      properties:
        type:
          type: string
        comment:
          type: string
          example: null
        vat:
          type: integer
    TransactionsSummary:
      type: object
      properties:
        year:
          type: integer
        annualIncome:
          type: integer
        annualOutcome:
          type: integer
        annualCashFlow:
          type: integer
        summary:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyTransactionsSummary'
        updatedAt:
          type: string
          format: date-time
    MonthlyTransactionsSummary:
      type: object
      properties:
        id:
          type: string
        month:
          type: integer
          description: |
            Months are represented by numbers from 0 to 11 respectively. For example, January 
            (0), etc.
        income:
          type: integer
          description: Format is cents
        outcome:
          type: integer
          description: Format is cents
        cashFlow:
          type: integer
          description: Format is cents
        updatedAt:
          type: string
          format: date-time
          description: Note that the summary is updated every hour
    CreateAccountInvoiceRelaunchConf:
      type: object
      properties:
        unpaidRelaunch:
          type: integer
          description: The frequency of sending the message in days
        draftRelaunch:
          type: integer
          description: The frequency of sending the message in days
    AccountInvoiceRelaunchConf:
      allOf:
        - $ref: '#/components/schemas/CreateAccountInvoiceRelaunchConf'
      properties:
        id:
          type: string
        updatedAt:
          type: string
          format: date-time
    InvoiceRelaunchConf:
      properties:
        id:
          type: string
        idInvoice:
          type: string
        delay:
          type: integer
        rehearsalNumber:
          type: integer
    CreateInvoiceRelaunch:
      type: object
      properties:
        subject:
          type: string
        object:
          type: string
        message:
          type: string
          description: html is waited
        emailBody:
          type: string
    InvoiceRelaunch:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/RelaunchType'
        invoice:
          $ref: '#/components/schemas/Invoice'
        emailInfo:
          $ref: '#/components/schemas/EmailInfo'
        accountId:
          type: string
        isUserRelaunched:
          type: boolean
        creationDatetime:
          type: string
          format: date-time
    EmailInfo:
      type: object
      properties:
        emailObject:
          type: string
        emailBody:
          type: string
          description: use HTML tags
        attachmentFileId:
          type: string
    RelaunchType:
      type: string
      enum:
        - PROPOSAL
        - CONFIRMED
    PaymentRedirection:
      allOf:
        - $ref: './api.yml#/components/schemas/Redirection'
      type: object
      properties:
        id:
          type: string
    CrupdateInvoiceTemplate:
      type: object
      properties:
        ref:
          type: string
        title:
          type: string
        comment:
          type: string
        customer:
          $ref: './customers-api.yml#/components/schemas/Customer'
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        sendingDate:
          type: string
          format: date
        validityDate:
          type: string
          format: date
        toPayAt:
          type: string
          format: date
        delayInPaymentAllowed:
          type: integer
        delayPenaltyPercent:
          type: integer
        metadata:
          type: object
          additionalProperties:
            type: string
    CrupdateInvoice:
      allOf:
        - $ref: '#/components/schemas/CrupdateInvoiceTemplate'
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/CreateProduct'
    Invoice:
      allOf:
        - $ref: '#/components/schemas/CrupdateInvoiceTemplate'
      properties:
        id:
          type: string
        paymentUrl:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        totalVat:
          type: integer
        totalPriceWithoutVat:
          type: integer
        totalPriceWithVat:
          type: integer
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        fileId:
          type: string
          description: |
            Identifier of the PDF file that is automatically generated for each crupdate.
            Its value is `null` when generation is not finished yet.
    InvoiceStatus:
      type: string
      enum:
        - DRAFT
        - ACCEPTED
        - PROPOSAL
        - PROPOSAL_CONFIRMED
        - CONFIRMED
        - PAID
    TransactionStatus:
      type: string
      enum:
        - PENDING
        - BOOKED
        - UPCOMING
        - UNKNOWN
        - REJECTED
    CreateProduct:
      type: object
      properties:
        description:
          type: string
        quantity:
          type: integer
        unitPrice:
          type: integer
        vatPercent:
          type: integer
    Product:
      allOf:
        - $ref: '#/components/schemas/CreateProduct'
      properties:
        id:
          type: string
        unitPriceWithVat:
          type: integer
        totalVat:
          type: integer
        totalPriceWithVat:
          type: integer
    PaymentInitiation:
      type: object
      properties:
        id:
          type: string
        amount:
          type: integer
        payerName:
          type: string
        payerEmail:
          type: string
        redirectionStatusUrls:
          $ref: './api.yml#/components/schemas/RedirectionStatusUrls'
        label:
          type: string
        reference:
          type: string