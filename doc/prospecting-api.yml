operations:
  getMarketplaces:
    get:
      tags:
        - Prospecting
      summary: Get marketplaces for an account
      operationId: getMarketplaces
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
      responses:
        200:
          description: List of marketplaces where the account owner can find customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Marketplace'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  prospectOperations:
    get:
      tags:
        - Prospecting
      summary: Get prospects for an accountHolder.
      operationId: getProspects
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
        - in: query
          name: name
          description: 'Filter prospects by name'
          schema:
            type: string
        #TODO: set pagination
      responses:
        200:
          description: List of prospects for an accountHolder.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
    put:
      tags:
        - Prospecting
      summary: update prospects of an accountHolder.
      operationId: updateProspects
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateProspect'
      responses:
        200:
          description: List of updated prospects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  prospectsEvaluationOperations:
    post:
      tags:
        - Prospecting
      summary: Read and evaluate new prospects of an accountHolder through specified google sheets
      operationId: evaluateProspects
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
        - in: header
          name: Accept
          schema:
            type: string
            description: Only JSON or EXCEL type is supported for now. Use MIME type to specify it.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheetProspectEvaluation'
      responses:
        200:
          description: The evaluated prospects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluatedProspect'
      400:
        $ref: './api.yml#/components/responses/400'
      403:
        $ref: './api.yml#/components/responses/403'
      404:
        $ref: './api.yml#/components/responses/404'
      429:
        $ref: './api.yml#/components/responses/429'
      500:
        $ref: './api.yml#/components/responses/500'
  prospectsEvaluation:
    post:
      tags:
        - Prospecting
      summary: Evaluate new prospects of an accountHolder from imported Excel data
      operationId: evaluateProspectsFromExcel
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
        - in: query
          name: professionRule
          schema:
            type: string
            example: DEPANNEUR
            description: Only `DEPANNEUR` profession is supported for now
          required: true
        - in: header
          name: newInterventionOption
          schema:
            $ref: '#/components/schemas/NewInterventionOption'
            description: |
              When any value provided, NEW_PROSPECT is chosen by default.
          required: false
        - in: header
          name: minCustomerRating
          schema:
            type: number
            format: double
            description: |
              When any value provided, minimum customer rating accepted is 8.0.
          required: false
        - in: header
          name: minProspectRating
          schema:
            type: number
            format: double
            description: |
              When any value provided, minimum prospect rating accepted is 8.0.
          required: false
      requestBody:
        required: true
        content:
          #TODO: add template link in description
          application/xls:
            schema:
              type: string
              format: binary
          application/xlsx:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: The evaluated prospects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluatedProspect'
      400:
        $ref: './api.yml#/components/responses/400'
      403:
        $ref: './api.yml#/components/responses/403'
      404:
        $ref: './api.yml#/components/responses/404'
      429:
        $ref: './api.yml#/components/responses/429'
      500:
        $ref: './api.yml#/components/responses/500'
  convertProspect:
    put:
      tags:
        - Prospecting
      summary: Convert prospect of an accountHolder.
      operationId: convertProspect
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProspectConversion'
      responses:
        200:
          description: The converted prospect.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
      400:
        $ref: './api.yml#/components/responses/400'
      403:
        $ref: './api.yml#/components/responses/403'
      404:
        $ref: './api.yml#/components/responses/404'
      429:
        $ref: './api.yml#/components/responses/429'
      500:
        $ref: './api.yml#/components/responses/500'
  updateProspects:
    put:
      tags:
        - Prospecting
      summary: update prospects status
      operationId: updateProspectsStatus
      parameters:
        - in: path
          name: ahId
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedProspectStatus'
      responses:
        200:
          description: The updated prospects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prospect'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  prospectEvaluationJobDetails:
    get:
      tags:
        - Prospecting
      summary: Get prospect evaluation job details for an account holder
      operationId: getProspectEvaluationJobDetailsById
      parameters:
        - name: ahId
          in: path
          description: Account holder identifier
          schema:
            type: string
          required: true
        - name: jId
          in: path
          description: Prospect evaluation job identifier
          schema:
            type: string
          required: true
      responses:
        200:
          description:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProspectEvaluationJobDetails'
          400:
            $ref: './api.yml#/components/responses/400'
          403:
            $ref: './api.yml#/components/responses/403'
          404:
            $ref: './api.yml#/components/responses/404'
          429:
            $ref: './api.yml#/components/responses/429'
          500:
            $ref: './api.yml#/components/responses/500'
  prospectEvaluationJobs:
    get:
      tags:
        - Prospecting
      summary: Get all prospect evaluation jobs for an account holder
      operationId: getProspectEvaluationJobs
      parameters:
        - name: ahId
          in: path
          description: Account holder identifier
          schema:
            type: string
          required: true
        - name: statuses
          in: query
          description: Filter prospect evaluation jobs by job statuses value
          schema:
            type: array
            items:
              $ref: './api.yml#/components/schemas/JobStatusValue'
          required: false
      responses:
        200:
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProspectEvaluationJobInfo'
          400:
            $ref: './api.yml#/components/responses/400'
          403:
            $ref: './api.yml#/components/responses/403'
          404:
            $ref: './api.yml#/components/responses/404'
          429:
            $ref: './api.yml#/components/responses/429'
          500:
            $ref: './api.yml#/components/responses/500'
    put:
      tags:
        - Prospecting
      summary: Run prospect-evaluation jobs
      operationId: runProspectEvaluationJobs
      parameters:
        - name: ahId
          in: path
          description: Account holder identifier
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PutProspectEvaluationJob'
      responses:
        200:
          description: |
            Return prospect evaluation jobs details.
            For each finished job with status `FINISHED`, an email will be automatically sent to the account holder.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProspectEvaluationJobDetails'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
components:
  schemas:
    Marketplace:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        websiteUrl:
          type: string
        logoUrl:
          type: string
    ProspectStatus:
      type: string
      enum:
        - TO_CONTACT
        - CONTACTED
        - CONVERTED
    UpdateProspect:
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        status:
          $ref: '#/components/schemas/ProspectStatus'
        townCode:
          type: integer
    EvaluatedProspect:
      allOf:
        - $ref: '#/components/schemas/Prospect'
      properties:
        reference:
          type: string
        website:
          type: string
        city:
          type: string
        managerName:
          type: string
        contactNature:
          $ref: '#/components/schemas/ContactNature'
        area:
          $ref: '#/components/schemas/Area'
        evaluationDate:
          type: string
          format: date-time
        interventionResult:
          $ref: '#/components/schemas/InterventionResult'
        oldCustomerResult:
          $ref: '#/components/schemas/OldCustomerResult'
    Prospect:
      allOf:
        - $ref: '#/components/schemas/UpdateProspect'
        - $ref: '#/components/schemas/ProspectStatusDetails'
      properties:
        rating:
          $ref: '#/components/schemas/ProspectRating'
        area:
          $ref: '#/components/schemas/Area'
        #deprecated, will be replaced by area
        location:
          $ref: '#/components/schemas/Geojson'
    ProspectStatusDetails:
      properties:
        comment:
          type: string
        invoiceID:
          type: string
        contractAmount:
          type: integer
        prospectFeedback:
          $ref: '#/components/schemas/ProspectFeedback'
    ExtendedProspectStatus:
      allOf:
        - $ref: '#/components/schemas/UpdateProspect'
        - $ref: '#/components/schemas/ProspectStatusDetails'
    Area:
      type: object
      properties:
        geojson:
          $ref: '#/components/schemas/Geojson'
        image:
          $ref: './files-api.yml/#/components/schemas/FileInfo'
    Geojson:
      type: object
      properties:
        type:
          type: string
        longitude:
          type: double
        latitude:
          type: double
    ProspectConversion:
      type: object
      properties:
        emailSentAt:
          type: string
          format: date-time
        emailRepliedAt:
          type: string
          format: date-time
    RuleResult:
      type: object
      properties:
        address:
          type: string
        distanceFromProspect:
          type: number
        value:
          type: number
          description: -1 if any rules applied, otherwise value must be between 0 and 10
    InterventionResult:
      allOf:
        - $ref: '#/components/schemas/RuleResult'
    OldCustomerResult:
      allOf:
        - $ref: '#/components/schemas/RuleResult'
    ContactNature:
      type: string
      enum:
        - PROSPECT
        - OLD_CUSTOMER
        - OTHER
    ProspectRating:
      type: object
      properties:
        value:
          type: number
          description: -1 if rating is unknown. Otherwise, value must be between 0.0 and 10.0
        lastEvaluation:
          type: string
          format: date-time
    NewInterventionOption:
      type: string
      description: |
        ALL means that at the same the new prospects evaluation and old customers evaluation will be applied.
        NEW_PROSPECT means that only the new prospects evaluation will be applied.
        OLD_CUSTOMER means that only the old customers evaluation will be applied.
      enum:
        - ALL
        - NEW_PROSPECT
        - OLD_CUSTOMER
    ProspectFeedback:
      type: string
      description: >
        This evaluation depends on the prospect's status:
        - TO_CONTACT: [NOT_INTERESTED, INTERESTED, PROPOSAL_SENT]
        - CONTACTED: [PROPOSAL_ACCEPTED, PROPOSAL_DECLINED, INVOICE_SENT]
      enum:
        - NOT_INTERESTED
        - INTERESTED
        - PROPOSAL_SENT
        - PROPOSAL_ACCEPTED
        - PROPOSAL_DECLINED
        - INVOICE_SENT
    SheetProspectEvaluation:
      type: object
      properties:
        artisanOwner:
          description: Artisan's account holder name. Must not be null.
          type: string
        evaluationRules:
          $ref: '#/components/schemas/ProspectEvaluationRules'
        sheetProperties:
          $ref: '#/components/schemas/SheetProperties'
        ratingProperties:
          $ref: '#/components/schemas/RatingProperties'
    SheetProperties:
      type: object
      properties:
        spreadsheetName:
          type: string
        sheetName:
          type: string
        ranges:
          $ref: '#/components/schemas/SheetRange'
    SheetRange:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer
    ProspectEvaluationRules:
      type: object
      properties:
        profession:
          type: string
          example: DEPANNEUR
          description: Only `DEPANNEUR` profession is supported for now
        newInterventionOption:
          $ref: '#/components/schemas/NewInterventionOption'
          description: |
            When any value provided, NEW_PROSPECT is chosen by default.
    PutProspectEvaluationJob:
      type: object
      properties:
        jobId:
          type: string
        eventProspectConversion:
          $ref: '#/components/schemas/PutEventProspectConversion'
        #TODO: add spreadsheetEvaluation here
    PutEventProspectConversion:
      type: object
      properties:
        calendarId:
          type: string
        evaluationRules:
          $ref: '#/components/schemas/EventEvaluationRules'
        eventDateRanges:
          $ref: '#/components/schemas/EventDateRanges'
        sheetProperties:
          $ref: '#/components/schemas/SheetProperties'
          description: |
            If not provided, then only existing customers will be evaluated.
        ratingProperties:
          $ref: '#/components/schemas/RatingProperties'
    EventEvaluationRules:
      type: object
      properties:
        profession:
          $ref: '#/components/schemas/ProfessionType'
        antiHarmRules:
          $ref: '#/components/schemas/AntiHarmRules'
    ProfessionType:
      type: string
      enum:
        #Only supported for now
        - ANTI_HARM
    AntiHarmRules:
      type: object
      properties:
        interventionTypes:
          type: array
          items:
            $ref: '#/components/schemas/InterventionType'
        infestationType:
          type: string
    InterventionType:
      type: string
      enum:
        - INSECT_CONTROL
        - DISINFECTION
        - RAT_REMOVAL
    EventDateRanges:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: |
            When not provided or the `to` parameter not provided, the filter parameter is ignored.
            If not provided, actual week is provided by default.
        to:
          type: string
          format: date-time
          description: |
            When not provided or the `from` parameter not provided, the filter parameter is ignored.
            If not provided, actual week is provided by default.
    RatingProperties:
      type: object
      properties:
        minCustomerRating:
          type: number
          format: double
          description: |
            When any value provided, minimum customer rating accepted is 8.0.
        minProspectRating:
          type: number
          format: double
          description: |
            When any value provided, minimum prospect rating accepted is 8.0.
    ProspectEvaluationJobInfo:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ProspectEvaluationJobType'
        status:
          $ref: '#/components/schemas/ProspectEvaluationJobStatus'
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
    ProspectEvaluationJobStatus:
      allOf:
        - $ref: './api.yml#/components/schemas/JobStatus'
    ProspectEvaluationJobType:
      type: string
      enum:
        - CALENDAR_EVENT_CONVERSION
        - ADDRESS_CONVERSION
        - SPREADSHEET_EVALUATION
    ProspectEvaluationJobDetails:
      allOf:
        - $ref: '#/components/schemas/ProspectEvaluationJobInfo'
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prospect'