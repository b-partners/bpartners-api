operations:
  getUserById:
    get:
      tags:
        - User Accounts
      summary: Get a user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getAccountsByUserId:
    get:
      tags:
        - User Accounts
      summary: Get accounts of a user
      operationId: getAccountsByUserId
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of accounts for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  updateCompanyInfo:
    put:
      tags:
        - User Accounts
      summary: Update company info of an account holder
      operationId: updateCompanyInfo
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: accountId
          schema:
            type: string
          required: true
        - in: path
          name: ahId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInfo'
      responses:
        200:
          description: The account holder with updated company information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolder'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getAccountHolders:
    get:
      tags:
        - User Accounts
      summary: Get accountHolders of an account
      operationId: getAccountHolders
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: accountId
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of accountHolders of an account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountHolder'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  updateBusinessActivities:
    put:
      tags:
        - User Accounts
      summary: Update business activities of an account holder
      operationId: updateBusinessActivities
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: accountId
          schema:
            type: string
          required: true
        - in: path
          name: ahId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBusinessActivity'
      responses:
        200:
          description: The account holder with company information update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolder'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getBusinessActivities:
    get:
      summary: Get all business activities pre-inserted by admin.
      tags:
        - User Accounts
      operationId: getBusinessActivities
      parameters:
        - in: query
          name: page
          schema:
            $ref: './api.yml#/components/schemas/Page'
        - in: query
          name: pageSize
          schema:
            $ref: './api.yml#/components/schemas/PageSize'
      responses:
        200:
          description: List of business activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessActivity'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  updateRevenueTargets:
    put:
      tags:
        - User Accounts
      summary: Update revenue targets of an account holder
      operationId: updateRevenueTargets
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: accountId
          schema:
            type: string
          required: true
        - in: path
          name: ahId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateAnnualRevenueTarget'
      responses:
        200:
          description: Account holder with updated revenue targets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolder'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  getLegalFiles:
    get:
      summary: Get legal files of a user
      tags:
        - User Accounts
      operationId: getLegalFiles
      parameters:
        - in: path
          name: id
          schema:
            type:
              string
          required: true
      responses:
        200:
          description: The legal files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalFile'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
  approveLegalFile:
    put:
      summary: Approve a user legal file
      tags:
        - User Accounts
      operationId: approveLegalFile
      parameters:
        - in: path
          name: uId
          schema:
            type:
              string
          required: true
        - in: path
          name: lId
          schema:
            type:
              string
          required: true
      responses:
        200:
          description: The approved legal files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFile'
        400:
          $ref: './api.yml#/components/responses/400'
        403:
          $ref: './api.yml#/components/responses/403'
        404:
          $ref: './api.yml#/components/responses/404'
        429:
          $ref: './api.yml#/components/responses/429'
        500:
          $ref: './api.yml#/components/responses/500'
components:
  schemas:
    LegalFile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        fileUrl:
          type: string
        approvalDatetime:
          type: string
          format: date-time
        toBeConfirmed:
          type: boolean
    User:
      properties:
        id:
          type: string
          example: 'uuid'
        firstName:
          type: string
          example: 'John'
        lastName:
          type: string
          example: 'Doe'
        idVerified:
          type: boolean
        identificationStatus:
          $ref: '#/components/schemas/IdentificationStatus'
        phone:
          type: string
          example: "+33 1 23 45 67 89"
        monthlySubscriptionAmount:
          type: integer
        logoFileId:
          type: string
        status:
          $ref: '#/components/schemas/EnableStatus'
    IdentificationStatus:
      type: string
      enum:
        - VALID_IDENTITY
        - PROCESSING
        - INVALID_IDENTITY
        - INSUFFICIENT_DOCUMENT_QUALITY
        - UNINITIATED
    EnableStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Bank:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
    Account:
      properties:
        id:
          type: string
        name:
          type: string
        iban:
          type: string
        bic:
          type: string
        availableBalance:
          type: integer
        bank:
          $ref: '#/components/schemas/Bank'
        #Deprecated
        IBAN:
          type: string
        BIC:
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
    AccountStatus:
      type: string
      enum:
        - OPENED
        - CLOSED
        - CLOSING
        - SUSPENDED
        - UNKNOWN
    AccountHolder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
        siren:
          type: string
        officialActivityName:
          type: string
        contactAddress:
          $ref: '#/components/schemas/ContactAddress'
        companyInfo:
          $ref: '#/components/schemas/CompanyInfo'
        businessActivities:
          $ref: '#/components/schemas/CompanyBusinessActivity'
        initialCashflow:
          type: integer
        verificationStatus:
          $ref: '#/components/schemas/VerificationStatus'
        revenueTargets:
          type: array
          items:
            $ref: '#/components/schemas/AnnualRevenueTarget'
    CreateAnnualRevenueTarget:
      type: object
      properties:
        year:
          type: integer
        amountTarget:
          type: integer
          description: Format is cent
    AnnualRevenueTarget:
      allOf:
        - $ref: '#/components/schemas/CreateAnnualRevenueTarget'
      properties:
        amountAttempted:
          type: integer
        amountAttemptedPercent:
          type: integer
        updatedAt:
          type: string
          format: date-time
    VerificationStatus:
      type: string
      enum:
        - VERIFIED
        - NOT_STARTED
        - PENDING
        - WAITING_FOR_INFORMATION
    ContactAddress:
      type: object
      properties:
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    CompanyInfo:
      type: object
      properties:
        isSubjectToVat:
          type: boolean
        phone:
          type: string
        email:
          type: string
        socialCapital:
          type: integer
        tvaNumber:
          type: string
        #should be moved to ContactAddress ASAP
        townCode:
          type: integer
        location:
          $ref: './prospecting-api.yml/#/components/schemas/Geojson'
    CompanyBusinessActivity:
      type: object
      properties:
        primary:
          type: string
        secondary:
          type: string
    BusinessActivity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string